/*
# Button

Your standard form button.


<pre><code>
$color-button-bg
$color-button-text
$color-button-text-light
$box-button-border-radius
$color-button-bg-dark
$color-highlight
$color-alert
$color-success
</code></pre>

Markup:
<button class="button {$modifiers}">Button (button.button)</button>
<a href="#" class="button {$modifiers}">Button (a.button)</a>
<button class="button gardient {$modifiers}">Gardient button (button.button.gardient)</button>

:hover    - Highlights when hovering.
:disabled - Dims the button when disabled.
.disabled - Dims the button when disabled.
:active   - Active button
.active   - Active button
.small  - A smaller button

Styleguide 1
*/


// Module variables:
$module-button-color-button-bg: $color-button-bg;
$module-button-color-button-text: $color-button-text;
$module-button-color-button-text-light: $color-button-text-light;
$module-button-box-button-border-radius: $box-button-border-radius;
$module-button-color-button-bg-dark: $color-button-bg-dark;
$module-button-color-highlight: $color-highlight;
$module-button-color-alert: $color-alert;
$module-button-color-success: $color-success;

$module-button-items: (
	"": (
		bg-color: $module-button-color-button-bg,
		text-color: $module-button-color-button-text,
		text-shadow: auto,
		border: auto,
		border-radius: $module-button-box-button-border-radius
	),
	".button-dark": (
		bg-color: $module-button-color-button-bg-dark,
		text-color: $module-button-color-button-text-light,
		text-shadow: auto,
		border: auto,
		border-radius: $module-button-box-button-border-radius
	),
	".button-highlight": (
		bg-color: $module-button-color-highlight,
		text-color: $module-button-color-button-text-light,
		text-shadow: auto,
		border: auto,
		border-radius: $module-button-box-button-border-radius
	),
	".button-alert": (
		bg-color: $module-button-color-alert,
		text-color: $module-button-color-button-text-light,
		text-shadow: auto,
		border: auto,
		border-radius: $module-button-box-button-border-radius
	),
	".button-success": (
		bg-color: $module-button-color-success,
		text-color: $module-button-color-button-text-light,
		text-shadow: auto,
		border: auto,
		border-radius: $module-button-box-button-border-radius
	),
);

.button {
	border-radius: 3px;
	display: inline-block;
	font-weight: bold;
	line-height: 34px;
	outline: none;
	padding: 0 11px;
	text-decoration: none;
	&.small {
		line-height: 26px;
		padding: 0 8px;
	}
}

/*
# Button (color) styles

Markup:
<button class="button {$modifiers}">Button (button.{$modifiers})</button>
<button class="button gardient {$modifiers}">Button (button.{$modifiers}.gardient)</button>

.button-dark - A bit longer now
.button-highlight - A bit shorter now.
.button-alert - A little bit shorter now.
.button-success - A little bit shorter now.

Styleguide 1.1
*/

.button {
	@each $class, $datas in $module-button-items {
		$button-start-color: map-get($datas, bg-color);
		$button-text-color: map-get($datas, text-color);
		$button-text-shadow: map-get($datas, text-shadow);
		$button-border: map-get($datas, border);
		$button-border-radius: map-get($datas, border-radius);

		&#{$class} {
			@if $button-border-radius != "" {
				border-radius: $button-border-radius;
			}
			@if $button-text-shadow != "" {
				@if $button-text-shadow == "auto" {
					@if lightness($button-text-color) < 40 {
						text-shadow: 0 1px 0 rgba(white,0.9);
					} @else {
						text-shadow: 0 -1px 0 rgba(black,0.9);
					}
				} @else {
					text-shadow: $button-text-shadow;
				}
			}
			@if $button-border == "auto" {
				border: 1px solid darken($button-start-color, 7%);
			} @else {
				border: $button-border;
			}
			background: $button-start-color;
			color: $button-text-color;
			&:hover {
				background: darken($button-start-color, 3%);
			}
			&:active, &.active {
				background-color: darken($button-start-color, 6%);
				background-image: none !important;
			}
			&.gardient {
				background-image: linear-gradient(lighten($button-start-color, 7%), $button-start-color);
				&:hover {
					background-image: linear-gradient(lighten($button-start-color, 4%), $button-start-color);
				}
				&:active, &.active {
					background-color: $button-start-color;
				}
			}
			&:disabled, &.disabled {
				background-color: lighten($button-start-color, 2%);
				background-image: none;
				cursor: default;
				opacity: .6;
			}
		}
	}
}


/*
# Button IcoMoon icons

Markup:
<button class="button">Button<span class="{$modifiers}"></span></button>
<button class="button"><span class="{$modifiers} left"></span>Button</button>
<button class="button small"><span class="{$modifiers}"></span>Button</button>
<button class="button small"><span class="{$modifiers} left"></span>Button</button>

.icon-home - home icon
.icon-pencil - pencil icon
.icon-cog - cog icon
.icon-close - close icon
.icon-facebook - facebook icon
.icon-feed - feed icon

Styleguide 1.2
*/



.button {
	[class^="icon-"], [class*=" icon-"] {
		display: inline-block;
		float: right;
		font-size: 16px;
		line-height: inherit;
		margin-left: 10px;
		&.left {
			float: left;
			margin-left: 0;
			margin-right: 10px;
		}
	}
	&.small {
		[class^="icon-"], [class*=" icon-"] {
			font-size: 14px;
			margin-left: 7px;
			&.left {
				margin-left: 0;
				margin-right: 7px;
			}
		}
	}
}